create or replace PROCEDURE P_EMP (
  HASIL OUT NUMBER,
  OPERASI IN VARCHAR2,
  V_EMPNO IN EMP.EMPNO%TYPE,
  V_ENAME IN EMP.ENAME%TYPE DEFAULT NULL,
  V_JOB IN EMP.JOB%TYPE DEFAULT NULL,
  V_MGR IN EMP.MGR%TYPE DEFAULT NULL,
  V_HIREDATE IN EMP.HIREDATE%TYPE DEFAULT SYSDATE,
  V_SAL IN EMP.SAL%TYPE DEFAULT NULL,
  V_COMM IN EMP.COMM%TYPE DEFAULT NULL,
  V_DEPTNO IN EMP.DEPTNO%TYPE DEFAULT NULL
) 
AS
  INSERT_EXEPT EXCEPTION;
  UPDATE_EXEPT EXCEPTION;
  DELETE_EXEPT EXCEPTION;
BEGIN
  IF OPERASI = 'INSERT' THEN
    INSERT INTO EMP
      VALUES(
        V_EMPNO, V_ENAME, V_JOB, 
        V_MGR, TO_DATE(V_HIREDATE, 'DD-MM-YYYY'), 
        V_SAL, V_COMM, V_DEPTNO);
    IF SQL%NOTFOUND THEN
      RAISE INSERT_EXEPT;
    ELSE
      COMMIT;
      HASIL := 1;
    END IF;
  ELSIF OPERASI = 'UPDATE' THEN
    UPDATE EMP SET
      ENAME = V_ENAME, JOB = V_JOB, MGR = MGR, 
      HIREDATE = TO_DATE(V_HIREDATE, 'DD-MM-YYYY'),
      SAL = V_SAL, COMM = V_COMM, DEPTNO = V_DEPTNO
      WHERE EMPNO = V_EMPNO;
    IF SQL%NOTFOUND THEN
      RAISE UPDATE_EXEPT;
    ELSE
      COMMIT;
      HASIL := 1;
    END IF;
  ELSIF OPERASI = 'DELETE' THEN
    DELETE FROM EMP WHERE EMPNO = V_EMPNO;
    IF SQL%NOTFOUND THEN
      RAISE DELETE_EXEPT;
    ELSE
      COMMIT;
      HASIL := 1;
    END IF;
  END IF;
EXCEPTION
  WHEN INSERT_EXEPT OR UPDATE_EXEPT OR DELETE EXEPT THEN
    HASIL := 0;
END P_EMP;
/